diff -Naur a/keepalived/core/main.c b/keepalived/core/main.c
--- a/keepalived/core/main.c	2022-10-13 23:10:48.000000000 +0300
+++ b/keepalived/core/main.c	2024-09-22 21:10:29.662030000 +0300
@@ -2483,8 +2483,8 @@
 					os_release = (unsigned)strtoul(end + 1, &end, 10);
 			}
 		}
-		if (!os_major)
-			log_message(LOG_INFO, "Unable to parse kernel version %s", uname_buf.release);
+		//if (!os_major)
+			//log_message(LOG_DEBUG, "Unable to parse kernel version %s", uname_buf.release);
 
 		/* config_id defaults to hostname */
 		if (!config_id) {
@@ -2507,9 +2507,9 @@
 		enable_console_log();
 
 #ifdef GIT_COMMIT
-	log_message(LOG_INFO, "Starting %s, git commit %s", version_string, GIT_COMMIT);
+	//log_message(LOG_DEBUG, "Starting %s, git commit %s", version_string, GIT_COMMIT);
 #else
-	log_message(LOG_INFO, "Starting %s", version_string);
+	//log_message(LOG_DEBUG, "Starting %s", version_string);
 #endif
 
 	/* Handle any core file requirements */
@@ -2799,9 +2799,9 @@
 		}
 
 #ifdef GIT_COMMIT
-		log_message(LOG_INFO, "Stopped %s, git commit %s", version_string, GIT_COMMIT);
+	//	log_message(LOG_DEBUG, "Stopped %s, git commit %s", version_string, GIT_COMMIT);
 #else
-		log_message(LOG_INFO, "Stopped %s", version_string);
+	//	log_message(LOG_DEBUG, "Stopped %s", version_string);
 #endif
 	}
 
diff -Naur a/keepalived/vrrp/vrrp_daemon.c b/keepalived/vrrp/vrrp_daemon.c
--- a/keepalived/vrrp/vrrp_daemon.c	2022-10-13 23:10:48.000000000 +0300
+++ b/keepalived/vrrp/vrrp_daemon.c	2024-09-22 21:09:54.702700000 +0300
@@ -1020,8 +1018,8 @@
 		vrrp_child = pid;
 		vrrp_start_time = time_now;
 
-		log_message(LOG_INFO, "Starting VRRP child process, pid=%d"
-			       , pid);
+//		log_message(LOG_DEBUG, "Starting VRRP child process, pid=%d"
+//			       , pid);
 
 		/* Start respawning thread */
 		thread_add_child(master, vrrp_respawn_thread, NULL,
diff -Naur a/lib/logger.c b/lib/logger.c
--- a/lib/logger.c	2021-06-14 10:47:20.000000000 +0300
+++ b/lib/logger.c	2024-09-22 19:54:44.884046000 +0300
@@ -56,7 +56,7 @@
 void
 open_syslog(const char *ident)
 {
-	openlog(ident, LOG_PID | ((__test_bit(LOG_CONSOLE_BIT, &debug)) ? LOG_CONS : 0), log_facility);
+	openlog(ident, ((__test_bit(LOG_CONSOLE_BIT, &debug)) ? LOG_CONS : 0), log_facility);
 }
 
 #ifdef ENABLE_LOG_TO_FILE
diff -Naur a/lib/notify.c a/lib/notify.c
--- a/lib/notify.c	2022-08-13 21:45:07.000000000 +0300
+++ b/lib/notify.c	2024-09-21 10:00:37.321775000 +0300
@@ -745,7 +745,8 @@
 	}
 
 	/* Remove /./, /../, multiple /'s, and resolve symbolic links */
-	new_path = realpath(script->args[0], NULL);
+	//new_path = realpath(script->args[0], NULL);
+	new_path = strdup(script->args[0]);
 	sav_errno = errno;
 
 	if (script->gid != our_gid || script->uid != our_uid) {
diff -Naur a/lib/scheduler.c b/lib/scheduler.c
--- a/lib/scheduler.c	2023-01-21 22:07:23.000000000 +0300
+++ b/lib/scheduler.c	2024-09-22 21:10:47.363190000 +0300
@@ -441,11 +441,11 @@
 
 		end = get_end(p, 100 - opt_len);
 		if (first_line) {
-			log_message(LOG_INFO, "%*s%s: %.*s", (int)indent, "", option, (int)(end - p), p);
+			log_message(LOG_DEBUG, "%*s%s: %.*s", (int)indent, "", option, (int)(end - p), p);
 			first_line = false;
 		}
 		else
-			log_message(LOG_INFO, "%*s%.*s", (int)(indent + opt_len + 2), "", (int)(end - p), p);
+			log_message(LOG_DEBUG, "%*s%.*s", (int)(indent + opt_len + 2), "", (int)(end - p), p);
 		p = end;
 	}
 }
@@ -472,7 +472,7 @@
 		p += sprintf(p, "%s'%s'", i ? " " : "", sav_argv[i]);
 	}
 
-	log_options("Command line", log_str, indent);
+	//log_options("Command line", log_str, indent);
 
 	FREE(log_str);
 }
diff -Naur a/lib/parser.c b/lib/parser.c
--- a/lib/parser.c	2024-09-23 12:22:52.396297973 +0300
+++ b/lib/parser.c	2024-09-22 21:11:01.603316000 +0300
@@ -3238,7 +3238,7 @@
 		/* Opened the first file */
 		file_opened = true;
 
-		log_message(LOG_INFO, "Configuration file %s", conf_file);
+		//log_message(LOG_DEBUG, "Configuration file %s", conf_file);
 	} else
 		file_config_error(INCLUDE_R, "Failed to open configuration file");
 
