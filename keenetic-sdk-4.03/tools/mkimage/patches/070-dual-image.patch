diff --git a/include/image.h b/include/image.h
index 0f838e57..9e2a7182 100644
--- a/include/image.h
+++ b/include/image.h
@@ -306,7 +306,7 @@ enum {
 
 #define LZ4F_MAGIC	0x184D2204	/* LZ4 Magic Number		*/
 #define IH_MAGIC	0x27051956	/* Image Magic Number		*/
-#define IH_NMLEN		32	/* Image Name Length		*/
+#define IH_NMLEN		31	/* Image Name Length		*/
 
 /* Reused from common.h */
 #define ROUND(a, b)		(((a) + (b) - 1) & ~((b) - 1))
@@ -328,6 +328,7 @@ typedef struct image_header {
 	uint8_t		ih_type;	/* Image Type			*/
 	uint8_t		ih_comp;	/* Compression Type		*/
 	uint8_t		ih_name[IH_NMLEN];	/* Image Name		*/
+	uint8_t		ih_dual_image;	/* Dual Image			*/
 } image_header_t;
 
 typedef struct image_info {
@@ -799,6 +800,7 @@ image_set_hdr_b(os)		/* image_set_os */
 image_set_hdr_b(arch)		/* image_set_arch */
 image_set_hdr_b(type)		/* image_set_type */
 image_set_hdr_b(comp)		/* image_set_comp */
+image_set_hdr_b(dual_image)	/* image_set_dual_image */
 
 static inline void image_set_name(image_header_t *hdr, const char *name)
 {
diff --git a/tools/default_image.c b/tools/default_image.c
index 8c4d7ec7..33691a18 100644
--- a/tools/default_image.c
+++ b/tools/default_image.c
@@ -126,6 +126,7 @@ static void image_set_header(void *ptr, struct stat *sbuf, int ifd,
 	image_set_arch(hdr, params->arch);
 	image_set_type(hdr, params->type);
 	image_set_comp(hdr, params->comp);
+	image_set_dual_image(hdr, params->dual_image);
 
 	image_set_name(hdr, params->imagename);
 
diff --git a/tools/imagetool.h b/tools/imagetool.h
index d235b35b..920af395 100644
--- a/tools/imagetool.h
+++ b/tools/imagetool.h
@@ -53,6 +53,7 @@ struct image_tool_params {
 	int arch;
 	int type;
 	int comp;
+	int dual_image;
 	unsigned int magic;
 	char *dtc;
 	unsigned int addr;
diff --git a/tools/mkimage.c b/tools/mkimage.c
index 7493fdb7..711fe044 100644
--- a/tools/mkimage.c
+++ b/tools/mkimage.c
@@ -77,7 +77,7 @@ static void usage(const char *msg)
 			 "          -l ==> list image header information\n",
 		params.cmdname);
 	fprintf(stderr,
-		"       %s [-x] -A arch -O os -T type -C comp -M magic -a addr -e ep -n name -d data_file[:data_file...] image\n"
+		"       %s [-g] [-x] -A arch -O os -T type -C comp -M magic -a addr -e ep -n name -d data_file[:data_file...] image\n"
 		"          -A ==> set architecture to 'arch'\n"
 		"          -O ==> set operating system to 'os'\n"
 		"          -T ==> set image type to 'type'\n"
@@ -85,6 +85,7 @@ static void usage(const char *msg)
 		"          -M ==> set image magic to 'magic'\n"
 		"          -a ==> set load address to 'addr' (hex)\n"
 		"          -e ==> set entry point to 'ep' (hex)\n"
+		"          -g ==> set dual image mark\n"
 		"          -n ==> set image name to 'name'\n"
 		"          -d ==> use image data from 'datafile'\n"
 		"          -x ==> set XIP (execute in place)\n",
@@ -145,7 +146,7 @@ static void process_args(int argc, char **argv)
 	int opt;
 
 	while ((opt = getopt(argc, argv,
-			     "a:A:b:c:C:d:D:e:Ef:Fk:i:K:lM:n:N:p:O:rR:qsT:vVx")) != -1) {
+			     "a:A:b:c:C:d:D:e:Ef:Fgk:i:K:lM:n:N:p:O:rR:qsT:vVx")) != -1) {
 		switch (opt) {
 		case 'a':
 			params.addr = strtoull(optarg, &ptr, 16);
@@ -211,6 +212,9 @@ static void process_args(int argc, char **argv)
 			params.type = IH_TYPE_FLATDT;
 			params.fflag = 1;
 			break;
+		case 'g':
+			params.dual_image = 1;
+			break;
 		case 'i':
 			params.fit_ramdisk = optarg;
 			break;
